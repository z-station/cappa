version: "3.3"

services:
  acm-db:
    container_name: acm-db
    image: postgres:13
    networks:
      - localhost
    volumes:
      - ../postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: acm
      POSTGRES_PASSWORD: acm
      POSTGRES_DB: acm
    restart: always

  acm-app:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    container_name: acm-app
    image: acm-app
    volumes:
      - ../public:/app/public
      - ../src:/app/src:ro
      - ../backup:/app/backup
    ports:
      - 8999:8999
    networks:
      - localhost
    depends_on:
      - acm-db
    environment:
      POSTGRES_USER: acm
      PGPASSWORD: acm
      POSTGRES_DB: acm
      POSTGRES_HOST: acm-db
      APP_STATIC_ROOT: /app/public/static
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-h", acm-db]
      interval: 5s
      timeout: 5s
      retries: 10
    command: >
      sh -c "memcached -d -u memcache &&
             cd /app/src &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0:8999 app.wsgi:application --reload -w 1"
networks:
  localhost:
    external: true
